{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadabdullah/Desktop/the-reincarnation-of-espncricinfo/src/ReactApp/crickinfo_react/src/pages/CRUDPages/UpdateTeamForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateTeamForm({\n  onClose\n}) {\n  _s();\n  const [teamId, setTeamId] = useState('');\n  const [selectedColumn, setSelectedColumn] = useState('');\n  const [newValue, setNewValue] = useState('');\n  const [columns, setColumns] = useState([]);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  useEffect(() => {\n    // Fetch all column names from the backend for TeamData\n    const fetchColumns = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/getteamcolumns');\n        setColumns(response.data.columns);\n      } catch (error) {\n        console.error('Error fetching columns:', error);\n        setError('Failed to fetch columns');\n      }\n    };\n\n    // Call the function to fetch columns when component mounts\n    fetchColumns();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'column') {\n      setSelectedColumn(value);\n    } else if (name === 'newValue') {\n      setNewValue(value);\n    } else if (name === 'teamId') {\n      setTeamId(value);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!teamId || !selectedColumn || !newValue) {\n      setError('Please provide all fields');\n      return;\n    }\n    try {\n      // Send data to backend for updating team column\n      const response = await axios.post('http://127.0.0.1:5000/api/updateteamcolumns', {\n        columnName: selectedColumn,\n        id: teamId,\n        newValue: newValue\n      });\n      console.log(response.data);\n      setSuccess('Team updated successfully');\n      onClose(); // Close the popup after successful update\n    } catch (error) {\n      console.error('Error updating team:', error);\n      setError('Failed to update team');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'green'\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"CrudLabels\",\n          children: \"Team ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"CrudInputs\",\n          type: \"number\",\n          min: 1,\n          name: \"teamId\",\n          value: teamId,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"CrudLabels\",\n          children: \"Column:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"CrudInputs\",\n          name: \"column\",\n          value: selectedColumn,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), columns && columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: column,\n            children: column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"CrudLabels\",\n          children: \"New Value:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"CrudInputs\",\n          type: \"text\",\n          name: \"newValue\",\n          value: newValue,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"b2\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateTeamForm, \"aQ0wXWrjd00vVOst2PH2yoGjX6o=\");\n_c = UpdateTeamForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateTeamForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UpdateTeamForm","onClose","_s","teamId","setTeamId","selectedColumn","setSelectedColumn","newValue","setNewValue","columns","setColumns","error","setError","success","setSuccess","fetchColumns","response","get","data","console","handleChange","e","name","value","target","handleSubmit","preventDefault","post","columnName","id","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","color","className","type","min","onChange","map","column","index","_c","$RefreshReg$"],"sources":["/Users/ahmadabdullah/Desktop/the-reincarnation-of-espncricinfo/src/ReactApp/crickinfo_react/src/pages/CRUDPages/UpdateTeamForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function UpdateTeamForm({ onClose }) {\n    const [teamId, setTeamId] = useState('');\n    const [selectedColumn, setSelectedColumn] = useState('');\n    const [newValue, setNewValue] = useState('');\n    const [columns, setColumns] = useState([]);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    useEffect(() => {\n        // Fetch all column names from the backend for TeamData\n        const fetchColumns = async () => {\n            try {\n                const response = await axios.get('http://127.0.0.1:5000/api/getteamcolumns');\n                setColumns(response.data.columns);\n            } catch (error) {\n                console.error('Error fetching columns:', error);\n                setError('Failed to fetch columns');\n            }\n        };\n\n        // Call the function to fetch columns when component mounts\n        fetchColumns();\n    }, []);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if (name === 'column') {\n            setSelectedColumn(value);\n        } else if (name === 'newValue') {\n            setNewValue(value);\n        } else if (name === 'teamId') {\n            setTeamId(value);\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!teamId || !selectedColumn || !newValue) {\n            setError('Please provide all fields');\n            return;\n        }\n        try {\n            // Send data to backend for updating team column\n            const response = await axios.post('http://127.0.0.1:5000/api/updateteamcolumns', {\n                columnName: selectedColumn,\n                id: teamId,\n                newValue: newValue\n            });\n            console.log(response.data);\n            setSuccess('Team updated successfully');\n            onClose(); // Close the popup after successful update\n        } catch (error) {\n            console.error('Error updating team:', error);\n            setError('Failed to update team');\n        }\n    };\n\n    return (\n        <div>\n            <h3>Update Team</h3>\n            <form onSubmit={handleSubmit}>\n                {error && <div style={{ color: 'red' }}>{error}</div>}\n                {success && <div style={{ color: 'green' }}>{success}</div>}\n                <div>\n                    <label className='CrudLabels'>Team ID:</label>\n                    <input className='CrudInputs' type=\"number\" min={1} name=\"teamId\" value={teamId} onChange={handleChange} />\n                </div>\n                <div>\n                    <label className='CrudLabels'>Column:</label>\n                    <select className='CrudInputs' name=\"column\" value={selectedColumn} onChange={handleChange}>\n                        <option value=\"\">Select Column</option>\n                        {columns && columns.map((column, index) => (\n                            <option key={index} value={column}>{column}</option>\n                        ))}\n                    </select>\n                </div>\n                <div>\n                    <label className='CrudLabels'>New Value:</label>\n                    <input className='CrudInputs' type=\"text\" name=\"newValue\" value={newValue} onChange={handleChange} />\n                </div>\n                <button type=\"submit\" className='b2'>Update</button>\n            </form>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}